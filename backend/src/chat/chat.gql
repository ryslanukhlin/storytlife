type Message {
    id: String!
    text: String!
    created_at: String!
    user_id: String!
    chat_id: String!
}

type Chat {
    id: String!
}

input MessageInput {
    txt: String!
    roomId: String!
    userId: String!
}

enum AcceptCall {
    Accept
    Deny
}

input CreateCallInput {
    chatId: String!
    userId: String!
    usingVideo: Boolean!
}

input AcceptCallInput {
    chatId: String!
    userId: String!
    acceptCall: AcceptCall!
}

type CreateCallType {
    chatId: String!
    usingVideo: Boolean!
}

type AcceptCallType {
    chatId: String!
    acceptCall: AcceptCall!
}

type Query {
    getMessages(roomId: String!): [Message]!
}

input DeleteInputNotification {
    notificationId: String!
    messageId: String!
}

enum CreateCallResult {
    SUCCESS
    REJECTED
}

type Mutation {
    createRoom(userId: String!): Chat!
    createMessage(messageInput: MessageInput!): String!
    createCall(createCallInput: CreateCallInput!): CreateCallResult!
    acceptCall(acceptCallInput: AcceptCallInput!): String!
    cancelCall(userId: String!): String!
    deleteNotification(deleteInputNotification: DeleteInputNotification!): String!
}

type Subscription {
    newCreateRoom(userId: String!): Chat!
    newMessage(roomId: String!): Message!
    newNotification(userId: String!): MessageNotification!
    newCreteCall(userId: String!): CreateCallType!
    newAcceptCall(userId: String!): AcceptCallType!
    newCancelCall(userId: String!): String!
}
